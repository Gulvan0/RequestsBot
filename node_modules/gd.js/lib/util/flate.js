"use strict";
/**
 * Zlib polyfill for the browser
 * @internal
 * @packageDocumentation
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.u8ToStr = exports.b64ToU8 = exports.decompress = void 0;
var crypto_1 = require("./crypto");
var fflate_1 = require("fflate");
/**
 * Decompress data of an arbitrary format
 * @param dat The data to decompress
 * @returns The decompressed data
 * @internal
 */
exports.decompress = function (dat) {
    return new Promise(function (res, rej) {
        return fflate_1.decompress(dat, { consume: true }, function (err, dat) { return (err ? rej(err) : res(dat)); });
    });
};
/**
 * Convert a string to a Uint8Array
 * @param str The Base64 string to convert
 * @returns The buffer containing the ASCII-encoded string
 * @internal
 */
exports.b64ToU8 = function (str) { return fflate_1.strToU8(crypto_1.gdDecodeBase64(str), true); };
/**
 * Convert a Uint8Array to a string
 * @param u8 The Uint8Array to convert
 * @returns The string containing the ASCII-decoded string
 * @internal
 */
exports.u8ToStr = function (u8) { return fflate_1.strFromU8(u8, true); };
